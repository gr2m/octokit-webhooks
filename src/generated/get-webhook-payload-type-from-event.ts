// THIS FILE IS GENERATED - DO NOT EDIT DIRECTLY
// make edits in scripts/generate-types.js

import { EventPayloads } from "./event-payloads";
import { WebhookEvent, WebhookEventHandlerError } from "../types";

export interface EventTypesPayload {
  error: WebhookEventHandlerError;
  "*": WebhookEvent<any>;
  check_run: WebhookEvent<EventPayloads.WebhookPayloadCheckRun>;
  "check_run.completed": WebhookEvent<EventPayloads.WebhookPayloadCheckRunCompletedAction>;
  "check_run.created": WebhookEvent<EventPayloads.WebhookPayloadCheckRunCreatedAction>;
  "check_run.requested_action": WebhookEvent<EventPayloads.WebhookPayloadCheckRunRequestedActionAction>;
  "check_run.rerequested": WebhookEvent<EventPayloads.WebhookPayloadCheckRunRerequestedAction>;
  check_suite: WebhookEvent<EventPayloads.WebhookPayloadCheckSuite>;
  "check_suite.completed": WebhookEvent<EventPayloads.WebhookPayloadCheckSuiteCompletedAction>;
  "check_suite.requested": WebhookEvent<EventPayloads.WebhookPayloadCheckSuiteRequestedAction>;
  "check_suite.rerequested": WebhookEvent<EventPayloads.WebhookPayloadCheckSuiteRerequestedAction>;
  code_scanning_alert: WebhookEvent<EventPayloads.WebhookPayloadCodeScanningAlert>;
  "code_scanning_alert.appeared_in_branch": WebhookEvent<EventPayloads.WebhookPayloadCodeScanningAlertAppearedInBranchAction>;
  "code_scanning_alert.closed_by_user": WebhookEvent<EventPayloads.WebhookPayloadCodeScanningAlertClosedByUserAction>;
  "code_scanning_alert.created": WebhookEvent<EventPayloads.WebhookPayloadCodeScanningAlertCreatedAction>;
  "code_scanning_alert.fixed": WebhookEvent<EventPayloads.WebhookPayloadCodeScanningAlertFixedAction>;
  "code_scanning_alert.reopened": WebhookEvent<EventPayloads.WebhookPayloadCodeScanningAlertReopenedAction>;
  "code_scanning_alert.reopened_by_user": WebhookEvent<EventPayloads.WebhookPayloadCodeScanningAlertReopenedByUserAction>;
  commit_comment: WebhookEvent<EventPayloads.WebhookPayloadCommitComment>;
  "commit_comment.created": WebhookEvent<EventPayloads.WebhookPayloadCommitCommentCreatedAction>;
  content_reference: WebhookEvent<EventPayloads.WebhookPayloadContentReference>;
  "content_reference.created": WebhookEvent<EventPayloads.WebhookPayloadContentReferenceCreatedAction>;
  create: WebhookEvent<EventPayloads.WebhookPayloadCreate>;
  delete: WebhookEvent<EventPayloads.WebhookPayloadDelete>;
  deploy_key: WebhookEvent<EventPayloads.WebhookPayloadDeployKey>;
  "deploy_key.created": WebhookEvent<EventPayloads.WebhookPayloadDeployKeyCreatedAction>;
  "deploy_key.deleted": WebhookEvent<EventPayloads.WebhookPayloadDeployKeyDeletedAction>;
  deployment: WebhookEvent<EventPayloads.WebhookPayloadDeployment>;
  "deployment.created": WebhookEvent<EventPayloads.WebhookPayloadDeploymentCreatedAction>;
  deployment_status: WebhookEvent<EventPayloads.WebhookPayloadDeploymentStatus>;
  "deployment_status.created": WebhookEvent<EventPayloads.WebhookPayloadDeploymentStatusCreatedAction>;
  fork: WebhookEvent<EventPayloads.WebhookPayloadFork>;
  github_app_authorization: WebhookEvent<EventPayloads.WebhookPayloadGithubAppAuthorization>;
  "github_app_authorization.revoked": WebhookEvent<EventPayloads.WebhookPayloadGithubAppAuthorizationRevokedAction>;
  gollum: WebhookEvent<EventPayloads.WebhookPayloadGollum>;
  installation: WebhookEvent<EventPayloads.WebhookPayloadInstallation>;
  "installation.created": WebhookEvent<EventPayloads.WebhookPayloadInstallationCreatedAction>;
  "installation.deleted": WebhookEvent<EventPayloads.WebhookPayloadInstallationDeletedAction>;
  "installation.new_permissions_accepted": WebhookEvent<EventPayloads.WebhookPayloadInstallationNewPermissionsAcceptedAction>;
  "installation.suspend": WebhookEvent<EventPayloads.WebhookPayloadInstallationSuspendAction>;
  "installation.unsuspend": WebhookEvent<EventPayloads.WebhookPayloadInstallationUnsuspendAction>;
  installation_repositories: WebhookEvent<EventPayloads.WebhookPayloadInstallationRepositories>;
  "installation_repositories.added": WebhookEvent<EventPayloads.WebhookPayloadInstallationRepositoriesAddedAction>;
  "installation_repositories.removed": WebhookEvent<EventPayloads.WebhookPayloadInstallationRepositoriesRemovedAction>;
  issue_comment: WebhookEvent<EventPayloads.WebhookPayloadIssueComment>;
  "issue_comment.created": WebhookEvent<EventPayloads.WebhookPayloadIssueCommentCreatedAction>;
  "issue_comment.deleted": WebhookEvent<EventPayloads.WebhookPayloadIssueCommentDeletedAction>;
  "issue_comment.edited": WebhookEvent<EventPayloads.WebhookPayloadIssueCommentEditedAction>;
  issues: WebhookEvent<EventPayloads.WebhookPayloadIssues>;
  "issues.assigned": WebhookEvent<EventPayloads.WebhookPayloadIssuesAssignedAction>;
  "issues.closed": WebhookEvent<EventPayloads.WebhookPayloadIssuesClosedAction>;
  "issues.deleted": WebhookEvent<EventPayloads.WebhookPayloadIssuesDeletedAction>;
  "issues.demilestoned": WebhookEvent<EventPayloads.WebhookPayloadIssuesDemilestonedAction>;
  "issues.edited": WebhookEvent<EventPayloads.WebhookPayloadIssuesEditedAction>;
  "issues.labeled": WebhookEvent<EventPayloads.WebhookPayloadIssuesLabeledAction>;
  "issues.locked": WebhookEvent<EventPayloads.WebhookPayloadIssuesLockedAction>;
  "issues.milestoned": WebhookEvent<EventPayloads.WebhookPayloadIssuesMilestonedAction>;
  "issues.opened": WebhookEvent<EventPayloads.WebhookPayloadIssuesOpenedAction>;
  "issues.pinned": WebhookEvent<EventPayloads.WebhookPayloadIssuesPinnedAction>;
  "issues.reopened": WebhookEvent<EventPayloads.WebhookPayloadIssuesReopenedAction>;
  "issues.transferred": WebhookEvent<EventPayloads.WebhookPayloadIssuesTransferredAction>;
  "issues.unassigned": WebhookEvent<EventPayloads.WebhookPayloadIssuesUnassignedAction>;
  "issues.unlabeled": WebhookEvent<EventPayloads.WebhookPayloadIssuesUnlabeledAction>;
  "issues.unlocked": WebhookEvent<EventPayloads.WebhookPayloadIssuesUnlockedAction>;
  "issues.unpinned": WebhookEvent<EventPayloads.WebhookPayloadIssuesUnpinnedAction>;
  label: WebhookEvent<EventPayloads.WebhookPayloadLabel>;
  "label.created": WebhookEvent<EventPayloads.WebhookPayloadLabelCreatedAction>;
  "label.deleted": WebhookEvent<EventPayloads.WebhookPayloadLabelDeletedAction>;
  "label.edited": WebhookEvent<EventPayloads.WebhookPayloadLabelEditedAction>;
  marketplace_purchase: WebhookEvent<EventPayloads.WebhookPayloadMarketplacePurchase>;
  "marketplace_purchase.cancelled": WebhookEvent<EventPayloads.WebhookPayloadMarketplacePurchaseCancelledAction>;
  "marketplace_purchase.changed": WebhookEvent<EventPayloads.WebhookPayloadMarketplacePurchaseChangedAction>;
  "marketplace_purchase.pending_change": WebhookEvent<EventPayloads.WebhookPayloadMarketplacePurchasePendingChangeAction>;
  "marketplace_purchase.pending_change_cancelled": WebhookEvent<EventPayloads.WebhookPayloadMarketplacePurchasePendingChangeCancelledAction>;
  "marketplace_purchase.purchased": WebhookEvent<EventPayloads.WebhookPayloadMarketplacePurchasePurchasedAction>;
  member: WebhookEvent<EventPayloads.WebhookPayloadMember>;
  "member.added": WebhookEvent<EventPayloads.WebhookPayloadMemberAddedAction>;
  "member.edited": WebhookEvent<EventPayloads.WebhookPayloadMemberEditedAction>;
  "member.removed": WebhookEvent<EventPayloads.WebhookPayloadMemberRemovedAction>;
  membership: WebhookEvent<EventPayloads.WebhookPayloadMembership>;
  "membership.added": WebhookEvent<EventPayloads.WebhookPayloadMembershipAddedAction>;
  "membership.removed": WebhookEvent<EventPayloads.WebhookPayloadMembershipRemovedAction>;
  meta: WebhookEvent<EventPayloads.WebhookPayloadMeta>;
  "meta.deleted": WebhookEvent<EventPayloads.WebhookPayloadMetaDeletedAction>;
  milestone: WebhookEvent<EventPayloads.WebhookPayloadMilestone>;
  "milestone.closed": WebhookEvent<EventPayloads.WebhookPayloadMilestoneClosedAction>;
  "milestone.created": WebhookEvent<EventPayloads.WebhookPayloadMilestoneCreatedAction>;
  "milestone.deleted": WebhookEvent<EventPayloads.WebhookPayloadMilestoneDeletedAction>;
  "milestone.edited": WebhookEvent<EventPayloads.WebhookPayloadMilestoneEditedAction>;
  "milestone.opened": WebhookEvent<EventPayloads.WebhookPayloadMilestoneOpenedAction>;
  organization: WebhookEvent<EventPayloads.WebhookPayloadOrganization>;
  "organization.deleted": WebhookEvent<EventPayloads.WebhookPayloadOrganizationDeletedAction>;
  "organization.member_added": WebhookEvent<EventPayloads.WebhookPayloadOrganizationMemberAddedAction>;
  "organization.member_invited": WebhookEvent<EventPayloads.WebhookPayloadOrganizationMemberInvitedAction>;
  "organization.member_removed": WebhookEvent<EventPayloads.WebhookPayloadOrganizationMemberRemovedAction>;
  "organization.renamed": WebhookEvent<EventPayloads.WebhookPayloadOrganizationRenamedAction>;
  org_block: WebhookEvent<EventPayloads.WebhookPayloadOrgBlock>;
  "org_block.blocked": WebhookEvent<EventPayloads.WebhookPayloadOrgBlockBlockedAction>;
  "org_block.unblocked": WebhookEvent<EventPayloads.WebhookPayloadOrgBlockUnblockedAction>;
  package: WebhookEvent<EventPayloads.WebhookPayloadPackage>;
  "package.published": WebhookEvent<EventPayloads.WebhookPayloadPackagePublishedAction>;
  "package.updated": WebhookEvent<EventPayloads.WebhookPayloadPackageUpdatedAction>;
  page_build: WebhookEvent<EventPayloads.WebhookPayloadPageBuild>;
  ping: WebhookEvent<EventPayloads.WebhookPayloadPing>;
  project_card: WebhookEvent<EventPayloads.WebhookPayloadProjectCard>;
  "project_card.converted": WebhookEvent<EventPayloads.WebhookPayloadProjectCardConvertedAction>;
  "project_card.created": WebhookEvent<EventPayloads.WebhookPayloadProjectCardCreatedAction>;
  "project_card.deleted": WebhookEvent<EventPayloads.WebhookPayloadProjectCardDeletedAction>;
  "project_card.edited": WebhookEvent<EventPayloads.WebhookPayloadProjectCardEditedAction>;
  "project_card.moved": WebhookEvent<EventPayloads.WebhookPayloadProjectCardMovedAction>;
  project_column: WebhookEvent<EventPayloads.WebhookPayloadProjectColumn>;
  "project_column.created": WebhookEvent<EventPayloads.WebhookPayloadProjectColumnCreatedAction>;
  "project_column.deleted": WebhookEvent<EventPayloads.WebhookPayloadProjectColumnDeletedAction>;
  "project_column.edited": WebhookEvent<EventPayloads.WebhookPayloadProjectColumnEditedAction>;
  "project_column.moved": WebhookEvent<EventPayloads.WebhookPayloadProjectColumnMovedAction>;
  project: WebhookEvent<EventPayloads.WebhookPayloadProject>;
  "project.closed": WebhookEvent<EventPayloads.WebhookPayloadProjectClosedAction>;
  "project.created": WebhookEvent<EventPayloads.WebhookPayloadProjectCreatedAction>;
  "project.deleted": WebhookEvent<EventPayloads.WebhookPayloadProjectDeletedAction>;
  "project.edited": WebhookEvent<EventPayloads.WebhookPayloadProjectEditedAction>;
  "project.reopened": WebhookEvent<EventPayloads.WebhookPayloadProjectReopenedAction>;
  public: WebhookEvent<EventPayloads.WebhookPayloadPublic>;
  pull_request: WebhookEvent<EventPayloads.WebhookPayloadPullRequest>;
  "pull_request.assigned": WebhookEvent<EventPayloads.WebhookPayloadPullRequestAssignedAction>;
  "pull_request.closed": WebhookEvent<EventPayloads.WebhookPayloadPullRequestClosedAction>;
  "pull_request.edited": WebhookEvent<EventPayloads.WebhookPayloadPullRequestEditedAction>;
  "pull_request.labeled": WebhookEvent<EventPayloads.WebhookPayloadPullRequestLabeledAction>;
  "pull_request.locked": WebhookEvent<EventPayloads.WebhookPayloadPullRequestLockedAction>;
  "pull_request.merged": WebhookEvent<EventPayloads.WebhookPayloadPullRequestMergedAction>;
  "pull_request.opened": WebhookEvent<EventPayloads.WebhookPayloadPullRequestOpenedAction>;
  "pull_request.ready_for_review": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReadyForReviewAction>;
  "pull_request.reopened": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReopenedAction>;
  "pull_request.review_request_removed": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewRequestRemovedAction>;
  "pull_request.review_requested": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewRequestedAction>;
  "pull_request.synchronize": WebhookEvent<EventPayloads.WebhookPayloadPullRequestSynchronizeAction>;
  "pull_request.unassigned": WebhookEvent<EventPayloads.WebhookPayloadPullRequestUnassignedAction>;
  "pull_request.unlabeled": WebhookEvent<EventPayloads.WebhookPayloadPullRequestUnlabeledAction>;
  "pull_request.unlocked": WebhookEvent<EventPayloads.WebhookPayloadPullRequestUnlockedAction>;
  pull_request_review: WebhookEvent<EventPayloads.WebhookPayloadPullRequestReview>;
  "pull_request_review.dismissed": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewDismissedAction>;
  "pull_request_review.edited": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewEditedAction>;
  "pull_request_review.submitted": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewSubmittedAction>;
  pull_request_review_comment: WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewComment>;
  "pull_request_review_comment.created": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewCommentCreatedAction>;
  "pull_request_review_comment.deleted": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewCommentDeletedAction>;
  "pull_request_review_comment.edited": WebhookEvent<EventPayloads.WebhookPayloadPullRequestReviewCommentEditedAction>;
  push: WebhookEvent<EventPayloads.WebhookPayloadPush>;
  release: WebhookEvent<EventPayloads.WebhookPayloadRelease>;
  "release.created": WebhookEvent<EventPayloads.WebhookPayloadReleaseCreatedAction>;
  "release.deleted": WebhookEvent<EventPayloads.WebhookPayloadReleaseDeletedAction>;
  "release.edited": WebhookEvent<EventPayloads.WebhookPayloadReleaseEditedAction>;
  "release.prereleased": WebhookEvent<EventPayloads.WebhookPayloadReleasePrereleasedAction>;
  "release.published": WebhookEvent<EventPayloads.WebhookPayloadReleasePublishedAction>;
  "release.released": WebhookEvent<EventPayloads.WebhookPayloadReleaseReleasedAction>;
  "release.unpublished": WebhookEvent<EventPayloads.WebhookPayloadReleaseUnpublishedAction>;
  repository_dispatch: WebhookEvent<EventPayloads.WebhookPayloadRepositoryDispatch>;
  "repository_dispatch.on-demand-test": WebhookEvent<EventPayloads.WebhookPayloadRepositoryDispatchOnDemandTestAction>;
  repository: WebhookEvent<EventPayloads.WebhookPayloadRepository>;
  "repository.archived": WebhookEvent<EventPayloads.WebhookPayloadRepositoryArchivedAction>;
  "repository.created": WebhookEvent<EventPayloads.WebhookPayloadRepositoryCreatedAction>;
  "repository.deleted": WebhookEvent<EventPayloads.WebhookPayloadRepositoryDeletedAction>;
  "repository.edited": WebhookEvent<EventPayloads.WebhookPayloadRepositoryEditedAction>;
  "repository.privatized": WebhookEvent<EventPayloads.WebhookPayloadRepositoryPrivatizedAction>;
  "repository.publicized": WebhookEvent<EventPayloads.WebhookPayloadRepositoryPublicizedAction>;
  "repository.renamed": WebhookEvent<EventPayloads.WebhookPayloadRepositoryRenamedAction>;
  "repository.transferred": WebhookEvent<EventPayloads.WebhookPayloadRepositoryTransferredAction>;
  "repository.unarchived": WebhookEvent<EventPayloads.WebhookPayloadRepositoryUnarchivedAction>;
  repository_import: WebhookEvent<EventPayloads.WebhookPayloadRepositoryImport>;
  repository_vulnerability_alert: WebhookEvent<EventPayloads.WebhookPayloadRepositoryVulnerabilityAlert>;
  "repository_vulnerability_alert.create": WebhookEvent<EventPayloads.WebhookPayloadRepositoryVulnerabilityAlertCreateAction>;
  "repository_vulnerability_alert.dismiss": WebhookEvent<EventPayloads.WebhookPayloadRepositoryVulnerabilityAlertDismissAction>;
  "repository_vulnerability_alert.resolve": WebhookEvent<EventPayloads.WebhookPayloadRepositoryVulnerabilityAlertResolveAction>;
  secret_scanning_alert: WebhookEvent<EventPayloads.WebhookPayloadSecretScanningAlert>;
  "secret_scanning_alert.created": WebhookEvent<EventPayloads.WebhookPayloadSecretScanningAlertCreatedAction>;
  "secret_scanning_alert.reopened": WebhookEvent<EventPayloads.WebhookPayloadSecretScanningAlertReopenedAction>;
  "secret_scanning_alert.resolved": WebhookEvent<EventPayloads.WebhookPayloadSecretScanningAlertResolvedAction>;
  security_advisory: WebhookEvent<EventPayloads.WebhookPayloadSecurityAdvisory>;
  "security_advisory.performed": WebhookEvent<EventPayloads.WebhookPayloadSecurityAdvisoryPerformedAction>;
  "security_advisory.published": WebhookEvent<EventPayloads.WebhookPayloadSecurityAdvisoryPublishedAction>;
  "security_advisory.updated": WebhookEvent<EventPayloads.WebhookPayloadSecurityAdvisoryUpdatedAction>;
  sponsorship: WebhookEvent<EventPayloads.WebhookPayloadSponsorship>;
  "sponsorship.cancelled": WebhookEvent<EventPayloads.WebhookPayloadSponsorshipCancelledAction>;
  "sponsorship.created": WebhookEvent<EventPayloads.WebhookPayloadSponsorshipCreatedAction>;
  "sponsorship.edited": WebhookEvent<EventPayloads.WebhookPayloadSponsorshipEditedAction>;
  "sponsorship.pending_cancellation": WebhookEvent<EventPayloads.WebhookPayloadSponsorshipPendingCancellationAction>;
  "sponsorship.pending_tier_change": WebhookEvent<EventPayloads.WebhookPayloadSponsorshipPendingTierChangeAction>;
  "sponsorship.tier_changed": WebhookEvent<EventPayloads.WebhookPayloadSponsorshipTierChangedAction>;
  star: WebhookEvent<EventPayloads.WebhookPayloadStar>;
  "star.created": WebhookEvent<EventPayloads.WebhookPayloadStarCreatedAction>;
  "star.deleted": WebhookEvent<EventPayloads.WebhookPayloadStarDeletedAction>;
  status: WebhookEvent<EventPayloads.WebhookPayloadStatus>;
  team: WebhookEvent<EventPayloads.WebhookPayloadTeam>;
  "team.added_to_repository": WebhookEvent<EventPayloads.WebhookPayloadTeamAddedToRepositoryAction>;
  "team.created": WebhookEvent<EventPayloads.WebhookPayloadTeamCreatedAction>;
  "team.deleted": WebhookEvent<EventPayloads.WebhookPayloadTeamDeletedAction>;
  "team.edited": WebhookEvent<EventPayloads.WebhookPayloadTeamEditedAction>;
  "team.removed_from_repository": WebhookEvent<EventPayloads.WebhookPayloadTeamRemovedFromRepositoryAction>;
  team_add: WebhookEvent<EventPayloads.WebhookPayloadTeamAdd>;
  watch: WebhookEvent<EventPayloads.WebhookPayloadWatch>;
  "watch.started": WebhookEvent<EventPayloads.WebhookPayloadWatchStartedAction>;
  workflow_dispatch: WebhookEvent<EventPayloads.WebhookPayloadWorkflowDispatch>;
  workflow_run: WebhookEvent<EventPayloads.WebhookPayloadWorkflowRun>;
  "workflow_run.action": WebhookEvent<EventPayloads.WebhookPayloadWorkflowRunActionAction>;
  "workflow_run.completed": WebhookEvent<EventPayloads.WebhookPayloadWorkflowRunCompletedAction>;
  "workflow_run.requested": WebhookEvent<EventPayloads.WebhookPayloadWorkflowRunRequestedAction>;
}

export type WebhookEvents = keyof EventTypesPayload;
